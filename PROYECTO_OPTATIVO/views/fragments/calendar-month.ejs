<div class="month">
  <div class="row text-center">
    <h3><%= getMonthName(date) %></h3>
  </div>
  <div class="row text-secondary">
    <div class="col">Lu</div>
    <div class="col">Ma</div>
    <div class="col">Mi</div>
    <div class="col">Ju</div>
    <div class="col">Vi</div>
    <div class="col">Sa</div>
    <div class="col">Do</div>
  </div>
  
  <% for (let week of getCalendarWeeks(date)) { %>
    <div class="row">
      <% for (let day of week) { %>
        <div class="col<%= day.isCurrentMonth ? '' : ' text-muted' %>">
          <%= day.day !== 0 ? day.day : '' %>
        </div>
      <% } %>
    </div>
  <% } %>
</div>

<%
// Define a function to get the month name from date
function getMonthName(date) {
  const months = [
    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
  ];
  const month = date.getMonth();
  const year = date.getFullYear();
  return `${months[month]} ${year}`;
}

// Define a function to generate the calendar for a specific month
function getCalendarWeeks(date) {
  const currentDate = date;
  const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
  const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
  const daysInMonth = lastDay.getDate();
  let firstDayOfWeek = firstDay.getDay();
  if(firstDayOfWeek === 0) {
    firstDayOfWeek = 6;
  }

  const weeks = [];
  let currentWeek = [];

  // Fill in leading empty days if necessary
  for (let i = 0; i < firstDayOfWeek; i++) {
    currentWeek.push({ day: 0, isCurrentMonth: false });
  }

  let dayCounter = currentWeek.length;

  // Generate the days of the specified month
  for (let day = 1; day <= daysInMonth; day++) {
    currentWeek.push({ day, isCurrentMonth: true });
    dayCounter++;

    if (dayCounter % 7 === 0) {
      weeks.push(currentWeek);
      currentWeek = [];
    }
  }

  // Fill in trailing empty days if necessary
  while (currentWeek.length < 7) {
    currentWeek.push({ day: 0, isCurrentMonth: false });
  }

  if (currentWeek.length > 0) {
    weeks.push(currentWeek);
  }

  return weeks;
}
%>